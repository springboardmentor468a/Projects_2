import os
import random
from pathlib import Path
from PIL import Image
import matplotlib.pyplot as plt
import torchvision.transforms as T
import torch

IMAGE_DIR = "my_images"         # ✅ your uploaded images
OUT_DIR = "processed_20"        # folder for processed images
random.seed(20251029)

os.makedirs(OUT_DIR, exist_ok=True)

# List all image files
img_exts = ('.jpg', '.jpeg', '.png', '.bmp', '.tiff')
all_images = [p for p in Path(IMAGE_DIR).iterdir() if p.suffix.lower() in img_exts]

print("Found", len(all_images), "images.")

# Transform pipeline
pipeline = T.Compose([
    T.Resize((450, 450)),
    T.RandomHorizontalFlip(p=0.5),
    T.ColorJitter(brightness=0.3, contrast=0.3, saturation=0.4, hue=0.1),
    T.RandomRotation(degrees=20),
    T.RandomApply([T.GaussianBlur(kernel_size=5)], p=0.5),
    T.RandomApply([T.RandomAdjustSharpness(sharpness_factor=2)], p=0.3),
    T.ToTensor(),
])

def tensor_to_pil(tensor):
    tensor = tensor.clamp(0,1)
    arr = (tensor * 255).byte().permute(1,2,0).numpy()
    return Image.fromarray(arr)

# Process each image
for p in all_images:
    orig = Image.open(p).convert("RGB")
    processed = pipeline(orig)
    processed_pil = tensor_to_pil(processed)

    # Show original and processed
    fig, ax = plt.subplots(1,2, figsize=(10,5))
    ax[0].imshow(orig); ax[0].set_title("Original"); ax[0].axis("off")
    ax[1].imshow(processed_pil); ax[1].set_title("Processed"); ax[1].axis("off")
    plt.show()

    # Save processed
    out_path = os.path.join(OUT_DIR, f"proc_{p.name}")
    processed_pil.save(out_path)
    print("Saved:", out_path)

print("✅ Done processing all images!")
